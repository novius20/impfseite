{"ast":null,"code":"import _regeneratorRuntime from\"/home/muhammad/your-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/home/muhammad/your-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/home/muhammad/your-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/muhammad/your-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FihrForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),output=_useState4[0],setOutput=_useState4[1];var patientsRes=[];var patients=[];var search=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _iterator,_step,element;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://hapi.fhir.org/baseR4/Patient?given=\"+name).then(function(response){patientsRes=response.data.entry;});case 2:_iterator=_createForOfIteratorHelper(patientsRes);try{for(_iterator.s();!(_step=_iterator.n()).done;){element=_step.value;patients.push(element.resource);}}catch(err){_iterator.e(err);}finally{_iterator.f();}console.log(patients);setOutput(renderBody());case 6:case\"end\":return _context.stop();}}},_callee);}));return function search(){return _ref.apply(this,arguments);};}();var makeString=function makeString(arr){var str=\"\";var _iterator2=_createForOfIteratorHelper(arr),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var element=_step2.value;str+=element;}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return str;};var renderBody=function renderBody(){return patients&&patients.map(function(_ref2){var id=_ref2.id,birthDate=_ref2.birthDate,gender=_ref2.gender,address=_ref2.address,name=_ref2.name;console.log(id);console.log(name);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:id}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:birthDate}),/*#__PURE__*/_jsx(\"td\",{children:gender})]},id);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"SearchField\",children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Gib einen Namen ein:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]})}),/*#__PURE__*/_jsx(\"div\",{id:\"SearchButton\",children:/*#__PURE__*/_jsx(\"button\",{onClick:search,children:\"Suchen\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{id:\"Output Table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Vorname\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Nachname\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Adresse\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Geburtstag\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Geschlecht\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:output})]})})]});}export default FihrForm;","map":{"version":3,"sources":["/home/muhammad/your-app/src/components/FihrForm.js"],"names":["useState","axios","FihrForm","name","setName","output","setOutput","patientsRes","patients","search","get","then","response","data","entry","element","push","resource","console","log","renderBody","makeString","arr","str","map","id","birthDate","gender","address","e","target","value"],"mappings":"6kBAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAElB,cAAwBF,QAAQ,CAAC,EAAD,CAAhC,wCAAOG,IAAP,eAAaC,OAAb,eACA,eAA4BJ,QAAQ,CAAC,EAAD,CAApC,yCAAOK,MAAP,eAAeC,SAAf,eAEA,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAEA,GAAMC,CAAAA,MAAM,0FAAG,qLACPR,CAAAA,KAAK,CAACS,GAAN,CAAU,8CAAgDP,IAA1D,EACHQ,IADG,CACE,SAACC,QAAD,CAAc,CAClBL,WAAW,CAAGK,QAAQ,CAACC,IAAT,CAAcC,KAA5B,CACD,CAHG,CADO,6CAMQP,WANR,MAMb,+CAAiC,CAAvBQ,OAAuB,aAC/BP,QAAQ,CAACQ,IAAT,CAAcD,OAAO,CAACE,QAAtB,EACD,CARY,qDAUbC,OAAO,CAACC,GAAR,CAAYX,QAAZ,EACAF,SAAS,CAACc,UAAU,EAAX,CAAT,CAXa,sDAAH,kBAANX,CAAAA,MAAM,0CAAZ,CAcA,GAAMY,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CAC1B,GAAIC,CAAAA,GAAG,CAAG,EAAV,CAD0B,0CAELD,GAFK,aAE1B,kDAAyB,IAAfP,CAAAA,OAAe,cACvBQ,GAAG,EAAIR,OAAP,CACD,CAJyB,uDAK1B,MAAOQ,CAAAA,GAAP,CACD,CAND,CAQA,GAAMH,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,MAAOZ,CAAAA,QAAQ,EAAIA,QAAQ,CAACgB,GAAT,CAAa,eAA+C,IAA5CC,CAAAA,EAA4C,OAA5CA,EAA4C,CAAxCC,SAAwC,OAAxCA,SAAwC,CAA7BC,MAA6B,OAA7BA,MAA6B,CAArBC,OAAqB,OAArBA,OAAqB,CAAZzB,IAAY,OAAZA,IAAY,CAC7Ee,OAAO,CAACC,GAAR,CAAYM,EAAZ,EACAP,OAAO,CAACC,GAAR,CAAYhB,IAAZ,EACA,mBACE,mCACE,oBAAKsB,EAAL,EADF,cAEE,aAFF,cAGE,aAHF,cAIE,aAJF,cAKE,oBAAKC,SAAL,EALF,cAME,oBAAKC,MAAL,EANF,GAASF,EAAT,CADF,CAUD,CAbkB,CAAnB,CAcD,CAfD,CAiBA,mBACE,oCACE,YAAK,EAAE,CAAC,aAAR,uBACE,6DACE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEtB,IAFT,CAGE,QAAQ,CAAE,kBAAC0B,CAAD,QAAOzB,CAAAA,OAAO,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAHZ,EADF,GADF,EADF,cAUE,YAAK,EAAE,CAAC,cAAR,uBACE,eAAQ,OAAO,CAAEtB,MAAjB,oBADF,EAVF,cAaE,aAbF,cAcE,YAAK,EAAE,CAAC,cAAR,uBACE,sCACE,oCACA,mCACE,0BADF,cAEE,+BAFF,cAGE,gCAHF,cAIE,+BAJF,cAKE,kCALF,cAME,kCANF,GADA,EADF,cAWE,uBACCJ,MADD,EAXF,GADF,EAdF,GADF,CAkCD,CAED,cAAeH,CAAAA,QAAf","sourcesContent":["import {useState} from \"react\";\nimport axios from \"axios\";\n\nfunction FihrForm() {\n\n  const [name, setName] = useState(\"\");\n  const [output, setOutput] = useState([]);\n\n  var patientsRes = [];\n  var patients = [];\n\n  const search = async () => {\n    await axios.get(\"https://hapi.fhir.org/baseR4/Patient?given=\" + name)\n      .then((response) => {\n        patientsRes = response.data.entry;\n      });\n\n    for(const element of patientsRes){\n      patients.push(element.resource);\n    }\n\n    console.log(patients);\n    setOutput(renderBody());\n  }\n\n  const makeString = (arr) => {\n    var str = \"\";\n    for(const element of arr){\n      str += element;\n    }\n    return str;\n  }\n\n  const renderBody = () => {\n    return patients && patients.map(({ id, birthDate, gender, address, name, }) => {\n      console.log(id);\n      console.log(name);\n      return (\n        <tr key={id}>\n          <td>{id}</td>\n          <td>{}</td>\n          <td>{}</td>\n          <td>{}</td>\n          <td>{birthDate}</td>\n          <td>{gender}</td>\n        </tr>\n      )\n    })\n  }\n\n  return (\n    <div>\n      <div id=\"SearchField\">\n        <label>Gib einen Namen ein:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </label>\n      </div>\n      <div id=\"SearchButton\">\n        <button onClick={search}>Suchen</button>\n      </div>\n      <br></br>\n      <div id=\"Output Table\">\n        <table>\n          <thead>\n          <tr>\n            <th>ID</th>\n            <th>Vorname</th>\n            <th>Nachname</th>\n            <th>Adresse</th>\n            <th>Geburtstag</th>\n            <th>Geschlecht</th>\n          </tr>\n          </thead>\n          <tbody>\n          {output}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default FihrForm;\n"]},"metadata":{},"sourceType":"module"}